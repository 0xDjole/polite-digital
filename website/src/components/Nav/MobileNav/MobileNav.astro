---
import { Icon } from "astro-icon/components";
import NavLink from "@components/Nav/NavLink.astro";
import ThemeToggle from "@components/ThemeToggle/ThemeToggle.astro";
import LanguageSelect from "@components/LanguageSelect/MobileLanguageSelect.astro";
import SiteLogo from "@components/SiteLogo/SiteLogo.astro";
import { cmsApi } from "@lib/index";
import { getLocale, locales } from "@lib/i18n";

const currLocale = getLocale(Astro.currentLocale);
const { getCollection, getBlockObjectValues } = cmsApi();
const websiteCollection = await getCollection("website");
const navData = getBlockObjectValues(websiteCollection, "navigation_items", currLocale);
---

<mobile-nav-menu>
	<button
		data-open-modal
		id="mobile-nav-open"
		class="text-primary flex h-10 w-10 items-center justify-center rounded-md"
	>
		<Icon name="mdi:menu" class="h-6 w-6" />
	</button>

	<dialog
		id="mobile-nav-dialog"
		class="mobile-nav-dialog bg-primary fixed inset-0 z-50 m-0 h-screen max-h-none w-screen max-w-none border-0 p-0"
	>
		<div class="flex h-full w-full flex-col">
			<!-- Header -->
			<div class="border-secondary bg-primary flex items-center justify-between border-b p-4">
				<SiteLogo />
				<button
					data-close-modal
					id="mobile-nav-close"
					class="text-primary flex h-10 w-10 items-center justify-center rounded-md"
				>
					<Icon name="mdi:close" class="h-6 w-6" />
				</button>
			</div>

			<!-- Navigation -->
			<nav class="bg-primary flex-1 overflow-y-auto p-4">
				<ul class="space-y-4">
					{
						navData.map((navItem) => (
							<li>
								<div
									href={navItem.link}
									class="text-primary hover:text-secondary block py-2 text-lg font-medium transition"
								>
									{navItem.text}
								</div>
							</li>
						))
					}
				</ul>
			</nav>

			<!-- Footer -->
			<div class="border-secondary bg-primary border-t p-4">
				<div class="flex items-center justify-between">
					<ThemeToggle />
					{locales.length > 1 && <LanguageSelect />}
				</div>
			</div>
		</div>
	</dialog>
</mobile-nav-menu>

<style>
	.mobile-nav-dialog {
		position: fixed !important;
		top: 0 !important;
		left: 0 !important;
		width: 100vw !important;
		height: 100vh !important;
		max-width: none !important;
		max-height: none !important;
		margin: 0 !important;
		padding: 0 !important;
		border: none !important;
		background: var(--bg-primary) !important;
	}

	.mobile-nav-dialog::backdrop {
		background: transparent;
	}
</style>

<script>
	class MobileNavigationMenu extends HTMLElement {
		constructor() {
			super();

			const openBtn = this.querySelector("#mobile-nav-open");
			const closeBtn = this.querySelector("#mobile-nav-close");
			const dialog = this.querySelector("#mobile-nav-dialog");

			openBtn?.addEventListener("click", () => {
				dialog?.showModal();
				document.body.style.overflow = "hidden";
			});

			closeBtn?.addEventListener("click", () => {
				dialog?.close();
				document.body.style.overflow = "";
			});

			// Close on backdrop click
			dialog?.addEventListener("click", (e) => {
				if (e.target === dialog) {
					dialog.close();
					document.body.style.overflow = "";
				}
			});
		}
	}

	customElements.define("mobile-nav-menu", MobileNavigationMenu);
</script>
