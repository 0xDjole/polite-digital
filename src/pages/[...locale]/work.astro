---
import BaseLayout from "@layouts/BaseLayout.astro";
import { defaultLocale, locales } from "@lib/i18n";

export function getStaticPaths() {
	return locales.map((locale) => ({
		params: {
			locale: locale === defaultLocale ? undefined : locale,
		},
		props: { locale },
	}));
}

const { locale = defaultLocale } = Astro.props;
---

<BaseLayout
	title="Lenis - Smooth Scrolling Library"
	description="Explore smooth scrolling experiences"
>
	<section id="vertical">
		<div class="container">
			<div class="vertical__content">
				<div class="col col_left">
					<h2 class="vertical__heading">
						<span>About</span><span>Smooth</span><span>Scroll</span>
					</h2>
				</div>
				<div class="col col_right">
					<div class="vertical__item">
						<h3>Smooth Scroll Lenis</h3>
						<p>
							Lenis is an open-source library built to standardize scroll experiences and sauce up
							websites with butter-smooth navigation, all while using the platform and keeping it
							accessible.
						</p>
					</div>
					<div class="vertical__item">
						<h3>Smooth Scroll Lenis</h3>
						<p>
							Lenis is an open-source library built to standardize scroll experiences and sauce up
							websites with butter-smooth navigation, all while using the platform and keeping it
							accessible.
						</p>
					</div>
					<div class="vertical__item">
						<h3>Smooth Scroll Lenis</h3>
						<p>
							Lenis is an open-source library built to standardize scroll experiences and sauce up
							websites with butter-smooth navigation, all while using the platform and keeping it
							accessible.
						</p>
					</div>
					<div class="vertical__item">
						<h3>Smooth Scroll Lenis</h3>
						<p>
							Lenis is an open-source library built to standardize scroll experiences and sauce up
							websites with butter-smooth navigation, all while using the platform and keeping it
							accessible.
						</p>
					</div>
				</div>
			</div>
		</div>
	</section>

	<section id="horizontal">
		<div class="container">
			<div class="horizontal__content">
				<div class="horizontal__item">
					<div class="horizontal__num">1</div>
				</div>
				<div class="horizontal__item">
					<div class="horizontal__num">2</div>
				</div>
				<div class="horizontal__item">
					<div class="horizontal__num">3</div>
				</div>
				<div class="horizontal__item">
					<div class="horizontal__num">4</div>
				</div>
				<div class="horizontal__item">
					<div class="horizontal__num">5</div>
				</div>
			</div>
		</div>
	</section>
</BaseLayout>

<style>
	@import "tailwindcss/theme" theme(reference);
	@import "@/styles/tailwind-theme.css" theme(reference);

	html {
		scroll-behavior: initial;
		overflow: hidden;
	}

	html,
	body {
		@apply min-h-full w-full;
	}

	body {
		@apply bg-black text-base font-normal text-white;
		font-family: Slussen;
	}

	h2 {
		@apply m-0 border-l-4 p-6 text-6xl leading-none font-black uppercase;
		border-color: #ff98a2;
	}

	h2 span {
		@apply block;
	}

	h3 {
		@apply text-xl leading-none font-normal uppercase;
		font-stretch: expanded;
		color: #ff98a2;
	}

	h2,
	h3,
	h4 {
		@apply uppercase;
	}

	.container {
		@apply mx-auto w-[95%];
	}

	section {
		@apply py-12;
	}

	.col {
		@apply w-1/2;
	}

	#vertical {
		@apply w-screen;
		height: 200vh;
	}

	.vertical__content {
		@apply flex items-start justify-center;
	}

	.vertical__content .col_left {
		@apply h-full;
	}

	.vertical__content .col.col_right {
		@apply w-2/5;
	}

	.vertical__item:not(:last-child) {
		@apply mb-60;
	}

	#horizontal {
		@apply py-24;
	}

	.horizontal__content {
		@apply flex;
	}

	.horizontal__item {
		@apply mr-12 border border-gray-100;
		padding: 200px 150px;
	}
	.horizontal__item:not(:last-child) {
		@apply mr-12;
	}

	.horizontal__num {
		@apply text-8xl font-black;
		font-stretch: condensed;
		color: #ff98a2;
	}
</style>

<script>
	import { animations } from "../../lib/animation.js";

	function initWorkAnimations() {
		// Horizontal scroll
		const { gsap } = animations();

		let sections = gsap.utils.toArray(".horizontal__item");
		gsap.to(sections, {
			xPercent: -100 * (sections.length - 1),
			ease: "none",
			scrollTrigger: {
				trigger: "#horizontal",
				pin: true,
				scrub: 1,
				snap: 1 / (sections.length - 1),
				end: () => "+=" + document.querySelector("#horizontal").offsetWidth,
			},
		});

		// Vertical animations
		gsap.from(".vertical__heading span", {
			y: 100,
			opacity: 0,
			duration: 1.2,
			stagger: 0.1,
			ease: "power3.out",
			scrollTrigger: {
				trigger: ".vertical__heading",
				start: "top 80%",
			},
		});

		gsap.from(".vertical__item", {
			y: 60,
			opacity: 0,
			duration: 1,
			stagger: 0.2,
			ease: "power3.out",
			scrollTrigger: {
				trigger: ".vertical__content",
				start: "top 60%",
			},
		});
	}

	document.addEventListener("DOMContentLoaded", initWorkAnimations);
	document.addEventListener("astro:after-swap", initWorkAnimations);
</script>
