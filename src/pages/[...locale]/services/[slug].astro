---
import BaseLayout from "@layouts/BaseLayout.astro";
import { defaultLocale, getLocale, locales } from "@lib/i18n";
import { cmsApi, getBlockFromArray } from "@lib/index";
import Service from "@lib/Reservation/Service/index.svelte";
import appConfig from "../../../appConfig";

const API_URL = appConfig.apiUrl;
const BUSINESS_ID = appConfig.businessId;

export async function getStaticPaths() {
	// Use dynamic import to get fresh config at build time
	const devConfig = (await import("../../../../config/dev.json")).default;
	const prodConfig = (await import("../../../../config/prod.json")).default;
	const environment = process.env.ENVIRONMENT || "dev";
	const config = environment === "prod" ? prodConfig : devConfig;
	
	const API_URL = config.apiUrl;
	const BUSINESS_ID = config.businessId;

	const res = await fetch(`${API_URL}/v1/businesses/${BUSINESS_ID}/services?limit=100`);
	const { items } = await res.json();

	return items.flatMap((service) =>
		locales.map((locale) => ({
			params: {
				slug: service.slug,
				locale: locale === defaultLocale ? undefined : locale,
			},
			props: { locale },
		})),
	);
}

const { slug } = Astro.params;

const serviceRes = await fetch(`${API_URL}/v1/businesses/${BUSINESS_ID}/services/${slug}`);
const service = await serviceRes.json();

const { getCollection, getBlockObjectValues } = cmsApi();
const websiteCollection = await getCollection("website");

const currLocale = getLocale(Astro.currentLocale);
const siteData = getBlockFromArray(websiteCollection, "info", currLocale);
---

<BaseLayout title={siteData.title} description={siteData.description}>
	<Service client:load service={service} />
</BaseLayout>
