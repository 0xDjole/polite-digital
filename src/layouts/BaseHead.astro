---
import { type CollectionEntry } from "astro:content";
import Seo from "@components/Seo/Seo.astro";

export interface Props {
	type?: "blog" | "general" | undefined;
	title: string;
	description: string;
	image?: CollectionEntry<"blog">["data"]["heroImage"];
	postFrontmatter?: CollectionEntry<"blog">["data"];
	authors?: CollectionEntry<"authors">[];
	noindex?: boolean;
}

const {
	type = "general",
	title,
	description,
	image,
	authors,
	postFrontmatter,
	noindex = false,
} = Astro.props as Props;

import interVariable from "@fontsource-variable/inter/files/inter-latin-wght-normal.woff2";
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" initial-scale="1.0" />

<!-- local font preload for better performance -->
<link rel="preload" href={interVariable} as="font" type="font/woff2" crossorigin="anonymous" />

<!-- Favicons. Generated from https://realfavicongenerator.net/ -->
<link rel="icon" href="/favicons/favicon.ico" />
<link rel="apple-touch-icon" sizes="180x180" href="/favicons/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicons/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicons/favicon-16x16.png" />
<link rel="manifest" href="/favicons/site.webmanifest" />
<link rel="mask-icon" href="/favicons/safari-pinned-tab.svg" color="#3e3e3e" />
<meta name="msapplication-TileColor" content="#3e3e3e" />
<meta name="theme-color" content="#3e3e3e" />

<!-- other -->
<meta name="generator" content={Astro.generator} />
<link rel="sitemap" href="/sitemap-index.xml" />

<!-- Theme initialization - Run early to eliminate FART (Flash of Incorrect Theme) -->
<script is:inline>
	function initTheme() {
		const colorTheme = localStorage.getItem("colorTheme");
		const htmlElement = document.documentElement;

		if (!colorTheme) {
			// Default to dark mode if no preference is set
			htmlElement.setAttribute("data-theme", "dark");
			localStorage.setItem("colorTheme", "dark");

			// Alternative: Use system preference (uncomment below and comment above)
			// const prefersDark = window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches;
			// const defaultTheme = prefersDark ? "dark" : "light";
			// htmlElement.setAttribute("data-theme", defaultTheme);
			// localStorage.setItem("colorTheme", defaultTheme);
		} else {
			// Apply the stored theme
			htmlElement.setAttribute("data-theme", colorTheme);
		}
	}

	// Run on initial page load
	initTheme();

	// Run on view transitions navigation
	document.addEventListener("astro:after-swap", initTheme);
</script>

<!-- GSAP Initialization -->
<script type="module">
	import { initGlobalGSAP } from '/src/lib/gsap-init.js';
	
	// Initialize GSAP when DOM is ready
	document.addEventListener('DOMContentLoaded', initGlobalGSAP);
	
	// Handle view transitions for Astro
	document.addEventListener('astro:after-swap', initGlobalGSAP);
</script>

<Seo
	type={type}
	title={title}
	description={description}
	image={image}
	authors={authors}
	postFrontmatter={postFrontmatter}
	noindex={noindex}
/>
